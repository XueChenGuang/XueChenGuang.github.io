<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>该死的秋招 • Posts by &#34;redis&#34; tag</title>
    <link href="http://example.com" />
    <updated>2023-10-04T03:46:39.000Z</updated>
    <category term="hello blog" />
    <category term="设计模式" />
    <category term="MySQL" />
    <category term="算法" />
    <category term="Redis" />
    <category term="其他" />
    <category term="分布式" />
    <category term="数据结构" />
    <category term="Spring" />
    <category term="Thread" />
    <category term="Java" />
    <category term="JDK" />
    <category term="SQL" />
    <category term="JVM" />
    <category term="多线程" />
    <category term="kafka" />
    <entry>
        <id>http://example.com/2023/10/04/Redis%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
        <title>Redis数据结构</title>
        <link rel="alternate" href="http://example.com/2023/10/04/Redis%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
        <content type="html">&lt;h3 id=&#34;写在前面&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#写在前面&#34;&gt;#&lt;/a&gt; 写在前面&lt;/h3&gt;
&lt;p&gt;美团面试的时候问到了 Redis 的数据结构，那个时候啥也不懂，所以针对 redis 为什么快，这个数据结构，搞一把。&lt;/p&gt;
&lt;h3 id=&#34;基本的数据类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基本的数据类型&#34;&gt;#&lt;/a&gt; 基本的数据类型&lt;/h3&gt;
&lt;h3 id=&#34;底层数据结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#底层数据结构&#34;&gt;#&lt;/a&gt; 底层数据结构&lt;/h3&gt;
</content>
        <category term="Redis" />
        <updated>2023-10-04T03:46:39.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/10/03/Redis%E7%9A%84%E6%8C%81%E4%B9%85%E5%8C%96/</id>
        <title>Redis的持久化</title>
        <link rel="alternate" href="http://example.com/2023/10/03/Redis%E7%9A%84%E6%8C%81%E4%B9%85%E5%8C%96/"/>
        <content type="html">&lt;h3 id=&#34;写在前面&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#写在前面&#34;&gt;#&lt;/a&gt; 写在前面&lt;/h3&gt;
&lt;p&gt;关于面试，我觉得持久化这边可以问的点还是挺多的，总的来说就是两个方法 AOF+RDB；然后两者中和，具体怎么中和的可以问，然后流程，涉及到写时复制以及调用 fsync，fork 创建子进程而产生的主线程页表复制等等&lt;/p&gt;
&lt;h3 id=&#34;aof&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#aof&#34;&gt;#&lt;/a&gt; AOF&lt;/h3&gt;
</content>
        <category term="Redis" />
        <updated>2023-10-03T05:35:20.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/09/20/Redis%E7%BC%93%E5%AD%98/</id>
        <title>Redis缓存</title>
        <link rel="alternate" href="http://example.com/2023/09/20/Redis%E7%BC%93%E5%AD%98/"/>
        <content type="html">&lt;h3 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h3&gt;
&lt;p&gt;一切都是为了更流利的表达&lt;/p&gt;
&lt;h3 id=&#34;缓存雪崩-击穿-穿透的定义以及解决方案&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#缓存雪崩-击穿-穿透的定义以及解决方案&#34;&gt;#&lt;/a&gt; 缓存雪崩、击穿、穿透的定义以及解决方案&lt;/h3&gt;
&lt;h3 id=&#34;缓存同步策略&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#缓存同步策略&#34;&gt;#&lt;/a&gt; 缓存同步策略&lt;/h3&gt;
&lt;h3 id=&#34;高可用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#高可用&#34;&gt;#&lt;/a&gt; 高可用&lt;/h3&gt;
</content>
        <category term="Redis" />
        <updated>2023-09-20T14:23:45.000Z</updated>
    </entry>
</feed>
